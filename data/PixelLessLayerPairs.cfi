es_module pixellesslayerpairs = PixelLessLayerPairsESProducer {

  string ComponentName = "PixelLessLayerPairs"

  vstring layerList = {"TIB1+TIB2", 
		       "TIB1+TID1_pos", "TIB1+TID2_pos","TIB1+TID1_neg", "TIB1+TID2_neg",
		       "TID1_pos+TID2_pos","TID2_pos+TID3_pos","TID3_pos+TEC2_pos","TEC2_pos+TEC3_pos",
		       "TID1_neg+TID2_neg","TID2_neg+TID3_neg","TID3_neg+TEC2_neg","TEC2_neg+TEC3_neg"
                      }

  //WARNING: in the old implemenation, all the 3 rings of  TID were used.
  // we need a different configuaration of rings for TID disks. Is it feasible 
  // in the current framework?? 

  PSet TIB = {
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
    untracked bool useSimpleRphiHitsCleaner = false
    string TTRHBuilder        =  "WithTrackAngle"
  }

  PSet TID1 = {
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
    string TTRHBuilder        =  "WithTrackAngle"
    untracked bool useSimpleRphiHitsCleaner = false
    untracked bool useRingSlector = true
    int32 minRing = 1
    int32 maxRing = 2
  }

  PSet TID2 = {
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
    string TTRHBuilder        =  "WithTrackAngle"
    untracked bool useSimpleRphiHitsCleaner = false
    untracked bool useRingSlector = true
    int32 minRing = 1
    int32 maxRing = 3
  }

  PSet TID3 = {
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
    string TTRHBuilder        =  "WithTrackAngle"
    untracked bool useSimpleRphiHitsCleaner = false
    untracked bool useRingSlector = true
    int32 minRing = 1
    int32 maxRing = 2
  }


  PSet TEC = {
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    string TTRHBuilder        =  "WithTrackAngle"
    untracked bool useRingSlector = true
    int32 minRing = 1
    int32 maxRing = 2
  }

}
